// Automatically generated by MockGen. DO NOT EDIT!
// Source: ./pkg/types/digester.go

package v1

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	io "io"
	time "time"
)

// Mock of Digester interface
type MockDigester struct {
	ctrl     *gomock.Controller
	recorder *_MockDigesterRecorder
}

// Recorder for MockDigester (not exported)
type _MockDigesterRecorder struct {
	mock *MockDigester
}

func NewMockDigester(ctrl *gomock.Controller) *MockDigester {
	mock := &MockDigester{ctrl: ctrl}
	mock.recorder = &_MockDigesterRecorder{mock}
	return mock
}

func (_m *MockDigester) EXPECT() *_MockDigesterRecorder {
	return _m.recorder
}

func (_m *MockDigester) Digest(_param0 context.Context, _param1 time.Time, _param2 time.Time) (io.ReadCloser, error) {
	ret := _m.ctrl.Call(_m, "Digest", _param0, _param1, _param2)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDigesterRecorder) Digest(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Digest", arg0, arg1, arg2)
}
